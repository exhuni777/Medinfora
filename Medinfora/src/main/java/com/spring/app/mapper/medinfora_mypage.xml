<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spring.app.mypage.model.MypageDAO">
	
	<!-- (의료인- 진료예약 열람) 아이디를 통해 병원인덱스 값 찾기  -->
	<select id="Searchhospital" resultType="String" parameterType="String">
		SELECT distinct hidx
		FROM
		(
		    select userid
		    from member
		) M
		JOIN
		(
		    select userid, hidx
		    from classcodemet
		) C
		ON M.userid = C.userid
		WHERE M.userid = #{userid}
	</select>
	
	<!-- (의료인- 진료예약 열람) hidx 의 현재 예약리스트 가져오기(환자명 검색)  -->
	<select id="PatientNameList" resultType="ReserveDTO" parameterType="HashMap">
		SELECT ridx, userid, reportday, checkin, rcode, hidx
		FROM
		(
		    SELECT row_number() over(order by ridx desc) as rno 
		        , ridx, RM.userid, reportday, checkin, RM.rcode, hidx
		    FROM
		    (
		        SELECT ridx, M.userid, reportday, checkin, rcode, hidx
		        FROM
		        (
		            select ridx, userid, reportday, checkin, rcode, hidx
		            from reserve
		            where hidx = #{hidx}
		            order by checkin desc
		        )R
		        JOIN
		        (
		            select userid, name
		            from member
		            where name like '%' || #{inputsc} || '%'
		        )M
		        ON R.userid = M.userid
		    ) RM
		    JOIN
		    (
		        select rcode, rstatus
		        from reservecode
		    ) RC
		    ON RM.rcode = RC.rcode
		)
		WHERE rno between #{startRno} and #{endRno}
	</select>
	
	<!-- (의료인- 진료예약 열람) hidx 의 현재 예약리스트 가져오기(진료현황 검색)  -->
	<select id="ReserveStatusList" resultType="ReserveDTO" parameterType="HashMap">
		SELECT ridx, userid, reportday, checkin, rcode, hidx
		FROM
		(
		    SELECT row_number() over(order by ridx desc) as rno 
		        , ridx, RM.userid, reportday, checkin, RM.rcode, hidx
		    FROM
		    (
		        SELECT ridx, M.userid, reportday, checkin, rcode, hidx
		        FROM
		        (
		            select ridx, userid, reportday, checkin, rcode, hidx
		            from reserve
		            where hidx = #{hidx}
		            order by checkin desc
		        )R
		        JOIN
		        (
		            select userid, name
		            from member
		        )M
		        ON R.userid = M.userid
		    ) RM
		    JOIN
		    (
		        select rcode, rstatus
		        from reservecode
		        where rstatus = #{inputsc}
		    ) RC
		    ON RM.rcode = RC.rcode
		)
		WHERE rno between #{startRno} and #{endRno}
	</select>
	
	<!-- (의료인- 진료예약 열람) hidx 의 현재 예약리스트 가져오기(진료예약일시, 예약신청일 검색)  -->
	<select id="ReserveDateList" resultType="ReserveDTO" parameterType="HashMap">
		SELECT ridx, userid, reportday, checkin, rcode, hidx
		FROM
		(
		    SELECT row_number() over(order by ridx desc) as rno 
		        , ridx, RM.userid, reportday, checkin, RM.rcode, hidx
		    FROM
		    (
		        SELECT ridx, M.userid, reportday, checkin, rcode, hidx
		        FROM
		        (
		            select ridx, userid, reportday, checkin, rcode, hidx
		            from reserve
		            where hidx = #{hidx}
		            	and (to_char(to_date(checkin,'yyyy-mm-dd hh24:mi:ss'),'yyyymmdd') = #{inputsc}
                		or to_char(to_date(reportday,'yyyy-mm-dd hh24:mi:ss'),'yyyymmdd') = #{inputsc})
		            order by checkin desc
		        )R
		        JOIN
		        (
		            select userid, name
		            from member
		        )M
		        ON R.userid = M.userid
		    ) RM
		    JOIN
		    (
		        select rcode, rstatus
		        from reservecode
		    ) RC
		    ON RM.rcode = RC.rcode
		)
		WHERE rno between #{startRno} and #{endRno}
	</select>
	
	<!-- (의료인- 진료예약 열람) hidx 의 현재 예약리스트 가져오기(환자명, 진료현황)  -->
	<select id="reserveList" resultType="ReserveDTO" parameterType="HashMap">
		SELECT ridx, userid, reportday, checkin, rcode, hidx
		FROM
		(
		    SELECT row_number() over(order by ridx desc) as rno 
		        , ridx, RM.userid, reportday, checkin, RM.rcode, hidx
		    FROM
		    (
		        SELECT ridx, M.userid, reportday, checkin, rcode, hidx
		        FROM
		        (
		            select ridx, userid, reportday, checkin, rcode, hidx
		            from reserve
		            where hidx = #{hidx}
		            order by checkin desc
		        )R
		        JOIN
		        (
		            select userid, name
		            from member
		            <if test='sclist == "환자명"' >
		            	where name like '%' || #{inputsc} || '%'
		            </if>
		        )M
		        ON R.userid = M.userid
		    ) RM
		    JOIN
		    (
		        select rcode, rstatus
		        from reservecode
		        <if test ='sclist == "진료현황"'>
		       		 where rstatus = #{inputsc}
		        </if>
		    ) RC
		    ON RM.rcode = RC.rcode
		)
		WHERE rno between #{startRno} and #{endRno}
	</select>
	
	<!-- (의료인- 진료예약 열람) 예약된 환자의 아이디 값을 가지고 이름과 전화번호 알아오기  -->
	<select id="GetPatientInfo" resultType="MemberDTO" parameterType="String">
		select name, mobile
		from member
		where userid = #{patient_id}
	</select>
	
	
	<!-- (내정보수정) 내정보 수정하기 (통합) -->
	<update id="updateinfo" parameterType="Map">
		UPDATE MEMBER
		SET mobile = #{mobile}
		<if test='address != ""'>
			,address = #{address}, detailaddress = #{detailaddress}
		</if>
		WHERE USERID = #{userid}
	</update>
	
	<!-- (비밀번호변경) 사용중인 비밀번호 확인하기 -->
	<select id="nowpwdCheck" parameterType="Map" resultType="String">
		select userid
		from MEMBER 
		where userid = #{userid} and PWD = #{pwd}
	</select>
	
	<!-- (비밀번호변경) 비밀번호 변경하기 -->
	<update id="updatepwd" parameterType="Map">
		UPDATE MEMBER
		SET pwd = #{pwd}, PWDUPDATEDAY = default
		WHERE userid = #{userid}
	</update>
	
</mapper>