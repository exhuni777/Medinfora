<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spring.app.reserve.model.ReserveDAO">
	
	<!-- (진료예약-병원선택)회원가입된 병원 개수  -->
	<select id="getTotalCnt" resultType="int" parameterType="HashMap">
		select count(*)
		from(
		    select CLASSCODEMET.HIDX as hidx,hpname,HPADDR,
		    HPTEL,row_number() over(order by CLASSCODEMET.hidx desc) AS rno
		    from CLASSCODEMET join HOSPITAL on CLASSCODEMET.HIDX = HOSPITAL.HIDX
		    where 1=1
		    <if test='city != "" '>
		    	and hpaddr like '%' || #{city} || '%'
		    </if>
		    <if test='local != "" '>
		    	and hpaddr like '%' || #{city} || '%' || #{local} || '%'
		    </if>
		    <if test='hpname != "" '>
		    	and hpname like '%' || #{hpname} || '%'
		    </if>
		    group by HPNAME,HPADDR,CLASSCODEMET.HIDX,HPTEL
		)
	</select>
	
	<!-- (진료예약-병원선택)회원가입된 병원 개수 (classcode가 있는경우)  -->
	<select id="getTotalCntClass" resultType="int" parameterType="HashMap">
		select count(*)
		from(
		    select CLASSCODEMET.HIDX as hidx,hpname,HPADDR,
		    HPTEL,row_number() over(order by CLASSCODEMET.hidx desc) AS rno
			from CLASSCODEMET join HOSPITAL on CLASSCODEMET.HIDX = HOSPITAL.HIDX 
			where CLASSCODEMET.CLASSCODE = #{classcode}
		    <if test='city != "" '>
		    	and hpaddr like '%' || #{city} || '%'
		    </if>
		    <if test='local != "" '>
		    	and hpaddr like '%' || #{city} || '%' || #{local} || '%'
		    </if>
		    <if test='hpname != "" '>
		    	and hpname like '%' || #{hpname} || '%'
		    </if>
		)
	</select>
	
	<!-- (진료예약-병원선택)회원가입된 병원 리스트 가져오기  -->
	<select id="mbHospitalList" resultType="HospitalDTO" parameterType="HashMap">
		select  hidx, hpname, HPADDR, HPTEL
		from(
		    select CLASSCODEMET.HIDX as hidx,hpname,HPADDR,
		    HPTEL,row_number() over(order by CLASSCODEMET.hidx desc) AS rno
		    from CLASSCODEMET join HOSPITAL on CLASSCODEMET.HIDX = HOSPITAL.HIDX
		    where 1=1
		    <if test='city != "" '>
		    	and hpaddr like '%' || #{city} || '%'
		    </if>
		    <if test='local != "" '>
		    	and hpaddr like '%' || #{city} || '%' || #{local} || '%'
		    </if>
		    <if test='hpname != "" '>
		    	and hpname like '%' || #{hpname} || '%'
		    </if>
		    group by HPNAME,HPADDR,CLASSCODEMET.HIDX,HPTEL
		)
		WHERE rno BETWEEN #{startRno} AND #{endRno}
	</select>
	
	<!-- (진료예약-병원선택)회원가입된 병원 리스트 가져오기 (classcode가 있는경우) -->
	<select id="mbHospitalListClass" resultType="HospitalDTO" parameterType="HashMap">
		select  hidx, hpname, HPADDR, HPTEL
		from(
		    select CLASSCODEMET.HIDX as hidx,hpname,HPADDR,
		    HPTEL,row_number() over(order by CLASSCODEMET.hidx desc) AS rno
			from CLASSCODEMET join HOSPITAL on CLASSCODEMET.HIDX = HOSPITAL.HIDX 
			where CLASSCODEMET.CLASSCODE = #{classcode}
		    <if test='city != "" '>
		    	and hpaddr like '%' || #{city} || '%'
		    </if>
		    <if test='local != "" '>
		    	and hpaddr like '%' || #{city} || '%' || #{local} || '%'
		    </if>
		    <if test='hpname != "" '>
		    	and hpname like '%' || #{hpname} || '%'
		    </if>
		)
		WHERE rno BETWEEN #{startRno} AND #{endRno}
	</select>

	<!-- (진료예약-진료일시선택) 날짜가 공휴일인지 체크 -->
	<select id="holidayCheck" resultType="int" parameterType="String">
		select count(*)
		from holiday
		where holiday_date = #{day}
	</select>
	
	<!-- (진료예약-진료일시선택) 병원의 오픈시간과 마감시간 파악  -->
	<select id="hospitalTime" resultType="HospitalDTO" parameterType="String">
		select hidx
	        , nvl(starttime1, ' ') as starttime1, nvl(starttime2, ' ') as starttime2, nvl(starttime3, ' ') as starttime3
	        , nvl(starttime4, ' ') as starttime4, nvl(starttime5, ' ') as starttime5, nvl(starttime6, ' ') as starttime6
	        , nvl(starttime7, ' ') as starttime7, nvl(starttime8,' ') as starttime8
	        , nvl(endtime1, ' ') as endtime1, nvl(endtime2, ' ') as endtime2, nvl(endtime3, ' ') as endtime3
	        , nvl(endtime4, ' ') as endtime4, nvl(endtime5, ' ') as endtime5, nvl(endtime6, ' ') as endtime6
	        , nvl(endtime7, ' ') as endtime7, nvl(endtime8, ' ') as endtime8
		from hospital
		where hidx = #{hidx}
	</select>
	
	<!-- (진료예약-진료일시선택) 선택한 날의 예약 개수 파악  -->
	<select id="reserveCnt" resultType="int" parameterType="HashMap">
		select count(*)
		from reserve
		where to_char(to_date(checkin,'yyyy-mm-dd hh24:mi:ss'),'yyyy-mm-dd') = to_char(to_date(#{day},'yyyy-mm-dd hh24:mi:ss'),'yyyy-mm-dd')
			and hidx = #{hidx}
	</select>
	
	<!-- (진료예약-진료일시선택) 현재시간 이후, 선택한 날짜와 예약일이 같은 경우  -->
	<select id="dayReserveImpossible" resultType="HospitalDTO" parameterType="HashMap">
		select ridx, userid, reportday, checkin, rcode, hidx
		from reserve
		where hidx = #{hidx}
			and to_date(checkin,'yyyy-mm-dd hh24:mi:ss') > to_char(to_date(sysdate,'yyyy-mm-dd hh24:mi:ss'))
		    and checkin = #{day}
	</select>
	
	<!-- (진료예약-진료일시선택) 예약접수  -->
	<insert id="insertReserve" parameterType="HashMap">
		insert into reserve(ridx, userid, checkin, hidx)
		values (seq_ridx.nextval, #{userid}, to_char(to_date(#{day}, 'yyyy-mm-dd hh24:mi:ss'),'yyyy-mm-dd hh24:mi:ss'), #{hidx})
	</insert>
</mapper>