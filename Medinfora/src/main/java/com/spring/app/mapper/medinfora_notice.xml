<?xml version="1.0" encoding="UTF-8"?>

<!-- ==== #29. mapper 기본설정 ==== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spring.app.notice.model.NoticeDAO">
		
	 <insert id="noticeWrite" parameterType="NoticeDTO">
        insert into notice (nidx, userid, title, content, viewcnt, writeday)
        values (seq_notice.nextval, #{userid}, #{title}, #{content}, #{viewcnt}, to_char(sysdate, 'yyyymmdd') )
    </insert> 
    
    <insert id="add_noticeWrite" parameterType="NoticeDTO">
        insert into notice (nidx, userid, title, content, viewcnt, writeday, filename, orgname, filesize)
        values (seq_notice.nextval, #{userid}, #{title}, #{content}, #{viewcnt}, to_char(sysdate, 'yyyymmdd'), #{filename}, #{orgname}, #{filesize})
    </insert>
    
    <select id="noticeListSearch_withPaging" parameterType="HashMap" resultType="NoticeDTO">
         
            SELECT nidx, userid, title, content, viewcnt, 
               TO_CHAR(TO_DATE(writeday, 'YYYYMMDD'), 'yyyy-mm-dd') AS writeday,
               filename, orgname, filesize
        FROM (
            SELECT rownum AS rno, nidx, userid, title, content, viewcnt, writeday, filename, orgname, filesize
            FROM notice
            WHERE 1=1
            ORDER BY nidx DESC
        )
     WHERE rno BETWEEN #{startRno} AND #{endRno}
    </select>
    
    <!-- 총 게시물 건수(totalCount) 구하기 - 검색이 있을 때와 검색이 없을 때로 나뉜다 -->
    <select id="getTotalCount" parameterType="HashMap" resultType="int">
        SELECT COUNT(*)
        FROM notice
        WHERE 1=1
        <!-- <if test="searchType != null and searchType != ''">
            AND ${searchType} LIKE '%' || #{searchWord} || '%'
        </if> -->
    </select>

    <select id="getView" parameterType="HashMap" resultType="NoticeDTO">
        SELECT nidx, userid, title, content, viewcnt, 
               TO_CHAR(TO_DATE(writeday, 'YYYYMMDD'), 'yyyy-mm-dd') AS writeday, 
               filename, orgname, filesize
        FROM notice
        WHERE nidx = #{nidx}
    </select>
    
    <!-- === #67. 글조회수 1증가 하기 === -->
    <update id="increase_readCount" parameterType="int">
        UPDATE notice SET viewcnt = viewcnt + 1 
        WHERE nidx = #{nidx}
    </update>
	
	 
    <!-- === 1개글 수정하기 === -->
  <update id="edit" parameterType="NoticeDTO">
    update notice
    set title = #{title},
        content = #{content},
        filename = #{filename},
        orgname = #{orgname},
        filesize = #{filesize}
    where nidx = #{nidx}
</update>

<select id="getView1" parameterType="HashMap" resultType="com.spring.app.domain.NoticeDTO">
        SELECT nidx, userid, title, content, viewcnt, writeday, filename, orgname, filesize
        FROM notice
        WHERE nidx = #{nidx}
    </select>


  
    <!-- === 1개글 삭제하기 === -->
    <delete id="del" parameterType="String">
        delete from notice
        where nidx = #{nidx}
    </delete>

</mapper>