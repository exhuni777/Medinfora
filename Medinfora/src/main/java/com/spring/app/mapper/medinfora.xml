<?xml version="1.0" encoding="UTF-8"?>

<!-- ==== #29. mapper 기본설정 ==== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mediinfora">
	
	<!-- 로그인 유저 정보 가져오기 -->
	<select id="getLoginuser" parameterType="HashMap" resultType="MemberDTO">
		SELECT userid, email, name, address, detailAddress, birthday, mobile, gender, M.registerday, midx, hidx
			   , loginmethod
		       , pwdUpdategap
		       , NVL(lastlogingap, trunc( months_between(sysdate, M.registerday) )) AS lastlogingap
		FROM
		(
		    select userid, email, name, address, detailAddress, birthday, mobile, gender, registerday, midx, hidx
		           , loginmethod
		           , trunc( months_between(sysdate, pwdupdateday) ) as pwdUpdategap
		    from member
		    where (midx between 0 and 8)
		    <choose>
		    	<when test="loginmethod eq 0">	<!-- 일반로그인 -->
		    		and loginmethod = #{loginmethod} and userid = #{userid} and pwd = #{pwd}
		    	</when>
		    	<when test="loginmethod eq 1"> <!-- 카카오 로그인  -->
		    		and loginmethod = #{loginmethod} and userid = #{userid}
		    	</when>
		    </choose>
		)M
		CROSS JOIN
		(
		    select trunc( months_between(sysdate, max(registerday)) ) as lastlogingap
		    from loginlog
		    where userid = #{userid}
		) L
	</select>
	
	<!-- 회원코드 변경 (휴먼처리) -->
	<update id="updatemIdx" parameterType="HashMap">
		update member set mIdx = to_number(#{idx})
		where userid = #{userid}
	</update>
	
	<!-- 로그인 유저 ip 기록 -->
	<insert id="insert_log" parameterType="HashMap">
		insert into loginlog(userid, ip, registerday)
		values(#{userid}, #{clientip}, sysdate)
	</insert>
	
	<!-- 병원정보 입력 API -->
	<insert id="hpApiInputer" parameterType="HospitalDTO">
		INSERT INTO HOSPITAL (HIDX, HPNAME, HPADDR, HPTEL, CLASSCODE, AGENCY, WGS84LON, WGS84LAT,
		STARTTIME1, STARTTIME2, STARTTIME3, STARTTIME4, STARTTIME5, STARTTIME6, STARTTIME7, STARTTIME8,
        ENDTIME1, ENDTIME2, ENDTIME3, ENDTIME4, ENDTIME5, ENDTIME6, ENDTIME7, ENDTIME8)
		VALUES (seq_hidx.nextval, #{hpname}, #{hpaddr}, #{hptel}, #{classcode}, #{agency}, #{wgs84lon}, #{wgs84lat}, 
		#{starttime1}, #{starttime2}, #{starttime3}, #{starttime4}, #{starttime5}, #{starttime6}, #{starttime7}, #{starttime8},
		#{endtime1}, #{endtime2}, #{endtime3}, #{endtime4}, #{endtime5}, #{endtime6}, #{endtime7}, #{endtime8})
	</insert>
	
	<!-- 행정구역 입력 -->
	<insert id="areaInputer" parameterType="KoreaAreaVO">
		INSERT INTO KOREAAREA (CITY, LOCAL, COUNTRY)
		VALUES (#{city}, #{local}, #{country})
	</insert>
	
	<!-- 행정구역 리스트 -->
	<select id="getcityinfo" resultType="String">
		select city from KOREAAREA group by city
		Order by city
	</select>
	
	<!-- 시/군/구 리스트 -->
	<select id="getlocalinfo" parameterType="String" resultType="String">
		select local from KOREAAREA where city = #{city} group by local
		Order by local
	</select>
	
	<!-- 읍/면/동 리스트 -->
	<select id="getcountryinfo" parameterType="KoreaAreaVO" resultType="String">
		select country from KOREAAREA where city = #{city} and local = #{local}
		order by country
	</select>
	
	<!-- 진료과목 리스트 -->
	<select id="getclasscode" resultType="ClasscodeDTO">
		select CLASSCODE,CLASSNAME from CLASSCODE
	</select>
		
	<select id="getHospitalList" parameterType="HashMap" resultType="HospitalDTO">
		SELECT A.HIDX, A.HPNAME, A.HPADDR, A.HPTEL, B.CLASSNAME, A.AGENCY
		FROM (
		    SELECT HIDX, HPNAME, HPADDR, HPTEL, CLASSCODE, AGENCY,
		     		row_number() over(order by HIDX desc) AS rno
		    FROM hospital
			where hpaddr like '%' || #{addr} || '%'
			<choose>
				<when test='classcode != "" '>
				    and classcode = #{classcode}
				</when>
				<when test='agency != "" '>
				    and agency = #{agency}
				</when>
				<when test='hpname != "" '>
				    and hpname like '%' || #{hpname} || '%'
				</when>
			</choose>
		) A
		JOIN CLASSCODE B ON A.CLASSCODE = B.CLASSCODE
		WHERE rno Between #{startRno} and #{endRno}
	</select>
	
	<!-- (진료예약)회원가입된 병원 개수  -->
	<select id="getTotalCnt" resultType="int">
		select count(*)
		from member
		where midx = 2
	</select>
	
	<!-- (진료예약)회원가입된 병원 리스트 가져오기  -->
	<select id="mbHospitalList" resultType="HospitalDTO" parameterType="HashMap">
		SELECT HC.hidx as hidx, hpname, hpaddr, hptel, classcode
		FROM
		(
		    select hidx
		    from member
		    where midx = 2
		) M
		JOIN
		(
		    SELECT hidx, hpname, hpaddr, hptel, H.classcode
		    FROM
		    (
		        select hidx, hpname, hpaddr, hptel, classcode
		        from hospital
		        where 1=1
		        <choose>
			    	<when test='city != "" '>
			    		and hpaddr like '%' || #{city} || '%'
			    	</when>
			    	<when test='local != "" '>
			    		and hpaddr like '%' || #{city} || '%' || #{local} || '%'
			    	</when>
			    	<when test='hpname != "" '>
			    		and hpname like '%' || #{hpname} || '%'
			    	</when>
			    	<when test='classcode != "" '>
			    		and classcode = #{classcode}
			    	</when>
		    	</choose>
		    ) H
		    JOIN
		    (
		        select classcode, classname
		        from classcode
		    ) C
		    ON H.classcode = C.classcode
		) HC
		ON M.hidx = HC.hidx
	</select>
	<select id="getHpListTotalCount"  parameterType="HashMap" resultType="int">
		SELECT COUNT(*)
		FROM hospital
		WHERE hpaddr LIKE '%' || #{addr} || '%'
		<choose>
		    <when test='classcode != "" '>
		        AND classcode = #{classcode}
		    </when>
		    <when test='agency != "" '>
		        AND agency = #{agency}
		    </when>
		    <when test='hpname != "" '>
		        AND hpname LIKE '%' || #{hpname} || '%'
		    </when>
		</choose>
	</select>
</mapper>