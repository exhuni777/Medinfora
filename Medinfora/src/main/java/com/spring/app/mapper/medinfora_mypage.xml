<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spring.app.mypage.model.MypageDAO">
	
	<!-- (내정보수정) 내정보 수정하기 (통합) -->
	<update id="updateinfo" parameterType="Map">
		UPDATE MEMBER
		SET mobile = #{mobile}
		<if test='address != ""'>
			,address = #{address}, detailaddress = #{detailaddress}
		</if>
		WHERE USERID = #{userid}
	</update>
	
	<!-- (비밀번호변경) 사용중인 비밀번호 확인하기 -->
	<select id="nowpwdCheck" parameterType="Map" resultType="String">
		select userid
		from MEMBER 
		where userid = #{userid} and PWD = #{pwd}
	</select>
	
	<!-- (비밀번호변경) 비밀번호 변경하기 -->
	<update id="updatepwd" parameterType="Map">
		UPDATE MEMBER
		SET pwd = #{pwd}, PWDUPDATEDAY = default
		WHERE userid = #{userid}
	</update>
	
	<!-- (의료인- 진료예약 열람) 아이디를 통해 병원인덱스 값 찾기  -->
	<select id="Searchhospital" resultType="String" parameterType="String">
		SELECT distinct hidx
		FROM
		(
		    select userid
		    from member
		) M
		JOIN
		(
		    select userid, hidx
		    from classcodemet
		) C
		ON M.userid = C.userid
		WHERE M.userid = #{userid}
	</select>
	
	<!-- (의료인- 진료예약 열람) hidx 의 현재 예약리스트 가져오기(환자명 검색)  -->
	<select id="PatientNameList" resultType="ReserveDTO" parameterType="HashMap">
		SELECT ridx, userid, reportday, checkin, rcode, hidx
		FROM
		(
		    SELECT row_number() over(order by ridx desc) as rno 
		        , ridx, RM.userid, reportday, checkin, RM.rcode, hidx
		    FROM
		    (
		        SELECT ridx, M.userid, reportday, checkin, rcode, hidx
		        FROM
		        (
		            select ridx, userid, reportday, checkin, rcode, hidx
		            from reserve
		            where hidx = #{hidx}
		            order by checkin desc
		        )R
		        JOIN
		        (
		            select userid, name
		            from member
		            where name like '%' || #{inputsc} || '%'
		        )M
		        ON R.userid = M.userid
		    ) RM
		    JOIN
		    (
		        select rcode, rstatus
		        from reservecode
		    ) RC
		    ON RM.rcode = RC.rcode
		)
		WHERE rno between #{startRno} and #{endRno}
	</select>
	
	<!-- (의료인- 진료예약 열람) hidx 의 현재 예약리스트 가져오기(진료현황 검색)  -->
	<select id="ReserveStatusList" resultType="ReserveDTO" parameterType="HashMap">
		SELECT ridx, userid, reportday, checkin, rcode, hidx
		FROM
		(
		    SELECT row_number() over(order by ridx desc) as rno 
		        , ridx, RM.userid, reportday, checkin, RM.rcode, hidx
		    FROM
		    (
		        SELECT ridx, M.userid, reportday, checkin, rcode, hidx
		        FROM
		        (
		            select ridx, userid, reportday, checkin, rcode, hidx
		            from reserve
		            where hidx = #{hidx}
		            order by checkin desc
		        )R
		        JOIN
		        (
		            select userid, name
		            from member
		        )M
		        ON R.userid = M.userid
		    ) RM
		    JOIN
		    (
		        select rcode, rstatus
		        from reservecode
		        where rstatus like '%' || #{inputsc} || '%'
		    ) RC
		    ON RM.rcode = RC.rcode
		)
		WHERE rno between #{startRno} and #{endRno}
	</select>
	
	<!-- (의료인- 진료예약 열람) hidx 의 현재 예약리스트 가져오기(진료예약일시, 예약신청일 검색)  -->
	<select id="ReserveDateList" resultType="ReserveDTO" parameterType="HashMap">
		SELECT ridx, userid, reportday, checkin, rcode, hidx
		FROM
		(
		    SELECT row_number() over(order by ridx desc) as rno 
		        , ridx, RM.userid, reportday, checkin, RM.rcode, hidx
		    FROM
		    (
		        SELECT ridx, M.userid, reportday, checkin, rcode, hidx
		        FROM
		        (
		            select ridx, userid, reportday, checkin, rcode, hidx
		            from reserve
		            where hidx = #{hidx}
		            	and (to_char(to_date(checkin,'yyyy-mm-dd hh24:mi:ss'),'yyyymmdd') = #{inputsc}
                		or to_char(to_date(reportday,'yyyy-mm-dd hh24:mi:ss'),'yyyymmdd') = #{inputsc})
		            order by checkin desc
		        )R
		        JOIN
		        (
		            select userid, name
		            from member
		        )M
		        ON R.userid = M.userid
		    ) RM
		    JOIN
		    (
		        select rcode, rstatus
		        from reservecode
		    ) RC
		    ON RM.rcode = RC.rcode
		)
		WHERE rno between #{startRno} and #{endRno}
	</select>
	
	<!-- (의료인- 진료예약 열람) hidx 의 현재 예약리스트 가져오기(환자명, 진료현황)  -->
	<select id="reserveList" resultType="ReserveDTO" parameterType="HashMap">
		SELECT ridx, userid, reportday, checkin, rcode, hidx
		FROM
		(
		    SELECT row_number() over(order by ridx desc) as rno 
		        , ridx, RM.userid, reportday, checkin, RM.rcode, hidx
		    FROM
		    (
		        SELECT ridx, M.userid, reportday, checkin, rcode, hidx
		        FROM
		        (
		            select ridx, userid, reportday, checkin, rcode, hidx
		            from reserve
		            where hidx = #{hidx}
		            order by checkin desc
		        )R
		        JOIN
		        (
		            select userid, name
		            from member
		            <if test='sclist == "환자명"' >
		            	where name like '%' || #{inputsc} || '%'
		            </if>
		        )M
		        ON R.userid = M.userid
		    ) RM
		    JOIN
		    (
		        select rcode, rstatus
		        from reservecode
		        <if test ='sclist == "진료현황"'>
		       		 where rstatus = #{inputsc}
		        </if>
		    ) RC
		    ON RM.rcode = RC.rcode
		)
		WHERE rno between #{startRno} and #{endRno}
	</select>
	
	<!-- (의료인- 진료예약 열람) hidx 의 현재 예약리스트 가져오기(환자명 검색 / 페이징 X) -->
	<select id="TotalPatientNameList" resultType="ReserveDTO" parameterType="HashMap">
		SELECT ridx, userid, reportday, checkin, rcode, hidx
		FROM
		(
		    SELECT row_number() over(order by ridx desc) as rno 
		        , ridx, RM.userid, reportday, checkin, RM.rcode, hidx
		    FROM
		    (
		        SELECT ridx, M.userid, reportday, checkin, rcode, hidx
		        FROM
		        (
		            select ridx, userid, reportday, checkin, rcode, hidx
		            from reserve
		            where hidx = #{hidx}
		            order by checkin desc
		        )R
		        JOIN
		        (
		            select userid, name
		            from member
		            where name like '%' || #{inputsc} || '%'
		        )M
		        ON R.userid = M.userid
		    ) RM
		    JOIN
		    (
		        select rcode, rstatus
		        from reservecode
		    ) RC
		    ON RM.rcode = RC.rcode
		)
	</select>
	
	<!-- (의료인- 진료예약 열람) hidx 의 현재 예약리스트 가져오기(진료현황 검색 / 페이징X)  -->
	<select id="TotalReserveStatusList" resultType="ReserveDTO" parameterType="HashMap">
		SELECT ridx, userid, reportday, checkin, rcode, hidx
		FROM
		(
		    SELECT row_number() over(order by ridx desc) as rno 
		        , ridx, RM.userid, reportday, checkin, RM.rcode, hidx
		    FROM
		    (
		        SELECT ridx, M.userid, reportday, checkin, rcode, hidx
		        FROM
		        (
		            select ridx, userid, reportday, checkin, rcode, hidx
		            from reserve
		            where hidx = #{hidx}
		            order by checkin desc
		        )R
		        JOIN
		        (
		            select userid, name
		            from member
		        )M
		        ON R.userid = M.userid
		    ) RM
		    JOIN
		    (
		        select rcode, rstatus
		        from reservecode
		        where rstatus = #{inputsc}
		    ) RC
		    ON RM.rcode = RC.rcode
		)
	</select>
	
	<!-- (의료인- 진료예약 열람) hidx 의 현재 예약리스트 가져오기(진료예약일시, 예약신청일 검색 / 페이징 X) -->
	<select id="TotalReserveDateList" resultType="ReserveDTO" parameterType="HashMap">
		SELECT ridx, userid, reportday, checkin, rcode, hidx
		FROM
		(
		    SELECT row_number() over(order by ridx desc) as rno 
		        , ridx, RM.userid, reportday, checkin, RM.rcode, hidx
		    FROM
		    (
		        SELECT ridx, M.userid, reportday, checkin, rcode, hidx
		        FROM
		        (
		            select ridx, userid, reportday, checkin, rcode, hidx
		            from reserve
		            where hidx = #{hidx}
		            	and (to_char(to_date(checkin,'yyyy-mm-dd hh24:mi:ss'),'yyyymmdd') = #{inputsc}
                		or to_char(to_date(reportday,'yyyy-mm-dd hh24:mi:ss'),'yyyymmdd') = #{inputsc})
		            order by checkin desc
		        )R
		        JOIN
		        (
		            select userid, name
		            from member
		        )M
		        ON R.userid = M.userid
		    ) RM
		    JOIN
		    (
		        select rcode, rstatus
		        from reservecode
		    ) RC
		    ON RM.rcode = RC.rcode
		)
	</select>
	
	<!-- (의료인- 진료예약 열람) hidx 의 현재 예약리스트의 개수(환자명, 진료현황) -->
	<select id="reserveListCnt" resultType="int" parameterType="HashMap">
		SELECT count(*)
		FROM
		(
		    SELECT row_number() over(order by ridx desc) as rno 
		        , ridx, RM.userid, reportday, checkin, RM.rcode, hidx
		    FROM
		    (
		        SELECT ridx, M.userid, reportday, checkin, rcode, hidx
		        FROM
		        (
		            select ridx, userid, reportday, checkin, rcode, hidx
		            from reserve
		            where hidx = #{hidx}
		            order by checkin desc
		        )R
		        JOIN
		        (
		            select userid, name
		            from member
		            <if test='sclist == "환자명"' >
		            	where name like '%' || #{inputsc} || '%'
		            </if>
		        )M
		        ON R.userid = M.userid
		    ) RM
		    JOIN
		    (
		        select rcode, rstatus
		        from reservecode
		        <if test ='sclist == "진료현황"'>
		       		 where rstatus = #{inputsc}
		        </if>
		    ) RC
		    ON RM.rcode = RC.rcode
		)
	</select>
	
	<!-- (의료인- 진료예약 열람) 예약된 환자의 아이디 값을 가지고 이름과 전화번호 알아오기  -->
	<select id="GetPatientInfo" resultType="MemberDTO" parameterType="String">
		select name, mobile
		from member
		where userid = #{patient_id}
	</select>
	
	<!-- (의료인- 진료예약 열람) ridx 를 통해 예약 정보 가져오기  -->
	<select id="getRdto" resultType="ReserveDTO" parameterType="String">
		SELECT ridx, reportday, checkin, name, mobile, rstatus
		FROM
		(
		    SELECT ridx, reportday, checkin, rcode, name, mobile
		    FROM
		    (
		        select ridx, userid, reportday, checkin, rcode
		        from reserve
		        where ridx = #{ridx}
		    )R
		    JOIN
		    (
		        select userid, name, mobile
		        from member
		    )M
		    ON R.userid = M.userid
		) RM
		JOIN
		(
		    select rcode, rstatus
		    from reservecode    
		) RC
		ON RM.rcode = RC.rcode
	</select>
	
	<!-- (의료인- 진료예약 열람) 선택한 진료현황의 예약코드 가져오기  -->
	<select id="GetRcode" resultType="String" parameterType="String">
		select rcode
		from reservecode 
		where rstatus = #{rStatus}
	</select>
	
	<!-- (의료인- 진료예약 열람) 진료현황 변경해주기  -->
	<update id="ChangeRstatus" parameterType="HashMap">
		update reserve set rcode = #{rcode}
		where ridx = #{ridx}
	</update>
	
	<!-- (의료인- 진료예약 열람) 진료완료로 변경하기  -->
	<update id="updatercode" parameterType="String">
		update reserve set rcode = '3'
		where ridx = #{ridx}
	</update>
	
	<!-- (일반회원- 진료예약 열람) userid 의 현재 예약리스트 가져오기(병원명 검색)  -->
	<select id="HospitalNameList" resultType="ReserveDTO" parameterType="HashMap">
		SELECT ridx, userid, reportday, checkin, rcode, hidx
		FROM
		(
		    SELECT row_number() over(order by ridx desc) as rno 
		        , ridx, userid, reportday, checkin, rcode, H.hidx as hidx
		    FROM
		    (
		        SELECT ridx, RM.userid, reportday, checkin, RM.rcode, hidx, rstatus
		        FROM
		        (
		            SELECT ridx, R.userid, reportday, checkin, rcode, hidx
		            FROM
		            (
		                select ridx, userid, reportday, checkin, rcode, hidx
		                from reserve
		            ) R
		            JOIN
		            (
		                select userid
		                from member
		                where userid = #{userid}
		            )M
		            ON R.userid = M.userid
		        )RM
		        JOIN
		        (
		            select rcode, rstatus
		            from reservecode
		        )RC
		        ON RM.rcode = RC.rcode
		    ) RMC
		    JOIN
		    (
		        select hidx, hpname, hptel
		        from hospital
		        where hpname like '%' || #{inputsc} || '%'
		    ) H
		    ON RMC.hidx = H.hidx
		)
		WHERE rno between #{startRno} and #{endRno}
	</select>
	
	<!-- (일반회원- 진료예약 열람) userid 의 현재 예약리스트 가져오기(진료현황 검색) -->
	<select id="UserReserveStatusList" resultType="ReserveDTO" parameterType="HashMap">
		SELECT ridx, userid, reportday, checkin, rcode, hidx
		FROM
		(
		    SELECT row_number() over(order by ridx desc) as rno 
		        , ridx, userid, reportday, checkin, rcode, hidx as hidx
		    FROM
		    (
		        SELECT ridx, RM.userid, reportday, checkin, RM.rcode, hidx, rstatus
		        FROM
		        (
		            SELECT ridx, R.userid, reportday, checkin, rcode, hidx
		            FROM
		            (
		                select ridx, userid, reportday, checkin, rcode, hidx
		                from reserve
		            ) R
		            JOIN
		            (
		                select userid
		                from member
		                where userid = #{userid}
		            )M
		            ON R.userid = M.userid
		        )RM
		        JOIN
		        (
		            select rcode, rstatus
		            from reservecode
		            where rstatus like '%' || #{inputsc} || '%'
		        )RC
		        ON RM.rcode = RC.rcode
		    ) RMC
		)
		WHERE rno between #{startRno} and #{endRno}
	</select>
	
	<!-- (일반회원- 진료예약 열람) userid 의 현재 예약리스트 가져오기(진료예약일시, 예약신청일 검색) -->
	<select id="UserReserveDateList" resultType="ReserveDTO" parameterType="HashMap">
		SELECT ridx, userid, reportday, checkin, rcode, hidx
		FROM
		(
		    SELECT row_number() over(order by ridx desc) as rno 
		        , ridx, userid, reportday, checkin, rcode, hidx as hidx
		    FROM
		    (
		        SELECT ridx, RM.userid, reportday, checkin, RM.rcode, hidx, rstatus
		        FROM
		        (
		            SELECT ridx, R.userid, reportday, checkin, rcode, hidx
		            FROM
		            (
		                select ridx, userid, reportday, checkin, rcode, hidx
		                from reserve
		                where (to_char(to_date(checkin,'yyyy-mm-dd hh24:mi:ss'),'yyyymmdd') = #{inputsc}
		                		or to_char(to_date(reportday,'yyyy-mm-dd hh24:mi:ss'),'yyyymmdd') = #{inputsc})
		            ) R
		            JOIN
		            (
		                select userid
		                from member
		                where userid = #{userid}
		            )M
		            ON R.userid = M.userid
		        )RM
		        JOIN
		        (
		            select rcode, rstatus
		            from reservecode
		        )RC
		        ON RM.rcode = RC.rcode
		    ) RMC
		)
		WHERE rno between #{startRno} and #{endRno}
	</select>
	
	<!-- (일반회원- 진료예약 열람) userid 의 현재 예약리스트 가져오기(병원명, 진료현황) -->
	<select id="UserreserveList" resultType="ReserveDTO" parameterType="HashMap">
		SELECT ridx, userid, reportday, checkin, rcode, hidx
		FROM
		(
		    SELECT row_number() over(order by ridx desc) as rno 
		        , ridx, userid, reportday, checkin, rcode, H.hidx as hidx
		    FROM
		    (
		        SELECT ridx, RM.userid, reportday, checkin, RM.rcode, hidx, rstatus
		        FROM
		        (
		            SELECT ridx, R.userid, reportday, checkin, rcode, hidx
		            FROM
		            (
		                select ridx, userid, reportday, checkin, rcode, hidx
		                from reserve
		            ) R
		            JOIN
		            (
		                select userid
		                from member
		                where userid = #{userid}
		            )M
		            ON R.userid = M.userid
		        )RM
		        JOIN
		        (
		            select rcode, rstatus
		            from reservecode
		            <if test ='sclist == "진료현황"'>
		                where rstatus = #{inputsc}
		            </if>
		            
		        )RC
		        ON RM.rcode = RC.rcode
		    ) RMC
		    JOIN
		    (
		        select hidx, hpname, hptel
		        from hospital
		        <if test='sclist == "병원명"' >
		            where hpname like '%' || #{inputsc} || '%'
		        </if>
		    ) H
		    ON RMC.hidx = H.hidx
		)
		WHERE rno between #{startRno} and #{endRno}
	</select>
	
	<!-- (일반회원- 진료예약 열람) userid 의 현재 예약리스트 가져오기(병원명 검색 / 페이징 X)  -->
	<select id="TotalReserveHospitalNameList" resultType="ReserveDTO" parameterType="HashMap">
		SELECT ridx, userid, reportday, checkin, rcode, hidx
		FROM
		(
		    SELECT row_number() over(order by ridx desc) as rno 
		        , ridx, userid, reportday, checkin, rcode, H.hidx as hidx
		    FROM
		    (
		        SELECT ridx, RM.userid, reportday, checkin, RM.rcode, hidx, rstatus
		        FROM
		        (
		            SELECT ridx, R.userid, reportday, checkin, rcode, hidx
		            FROM
		            (
		                select ridx, userid, reportday, checkin, rcode, hidx
		                from reserve
		            ) R
		            JOIN
		            (
		                select userid
		                from member
		                where userid = #{userid}
		            )M
		            ON R.userid = M.userid
		        )RM
		        JOIN
		        (
		            select rcode, rstatus
		            from reservecode
		        )RC
		        ON RM.rcode = RC.rcode
		    ) RMC
		    JOIN
		    (
		        select hidx, hpname, hptel
		        from hospital
		        where hpname like '%' || #{inputsc} || '%'
		    ) H
		    ON RMC.hidx = H.hidx
		)
	</select>
	
	<!-- (일반회원- 진료예약 열람) userid 의 현재 예약리스트 가져오기(진료현황 검색 / 페이징X) -->
	<select id="TotalUserReserveStatusList" resultType="ReserveDTO" parameterType="HashMap">
		SELECT ridx, userid, reportday, checkin, rcode, hidx
		FROM
		(
		    SELECT row_number() over(order by ridx desc) as rno 
		        , ridx, userid, reportday, checkin, rcode, hidx as hidx
		    FROM
		    (
		        SELECT ridx, RM.userid, reportday, checkin, RM.rcode, hidx, rstatus
		        FROM
		        (
		            SELECT ridx, R.userid, reportday, checkin, rcode, hidx
		            FROM
		            (
		                select ridx, userid, reportday, checkin, rcode, hidx
		                from reserve
		            ) R
		            JOIN
		            (
		                select userid
		                from member
		                where userid = #{userid}
		            )M
		            ON R.userid = M.userid
		        )RM
		        JOIN
		        (
		            select rcode, rstatus
		            from reservecode
		            where rstatus = #{inputsc}
		        )RC
		        ON RM.rcode = RC.rcode
		    ) RMC
		)
	</select>
	
	<!-- (일반회원- 진료예약 열람) userid 의 현재 예약리스트 가져오기(진료예약일시, 예약신청일 검색 / 페이징 X) -->
	<select id="TotalUserReserveDateList" resultType="ReserveDTO" parameterType="HashMap">
		SELECT ridx, userid, reportday, checkin, rcode, hidx
		FROM
		(
		    SELECT row_number() over(order by ridx desc) as rno 
		        , ridx, userid, reportday, checkin, rcode, hidx as hidx
		    FROM
		    (
		        SELECT ridx, RM.userid, reportday, checkin, RM.rcode, hidx, rstatus
		        FROM
		        (
		            SELECT ridx, R.userid, reportday, checkin, rcode, hidx
		            FROM
		            (
		                select ridx, userid, reportday, checkin, rcode, hidx
		                from reserve
		                where (to_char(to_date(checkin,'yyyy-mm-dd hh24:mi:ss'),'yyyymmdd') = #{inputsc}
		                		or to_char(to_date(reportday,'yyyy-mm-dd hh24:mi:ss'),'yyyymmdd') = #{inputsc})
		            ) R
		            JOIN
		            (
		                select userid
		                from member
		                where userid = #{userid}
		            )M
		            ON R.userid = M.userid
		        )RM
		        JOIN
		        (
		            select rcode, rstatus
		            from reservecode
		        )RC
		        ON RM.rcode = RC.rcode
		    ) RMC
		)
	</select>
	
	<!-- (일반회원- 진료예약 열람) userid 의 현재 예약리스트의 개수(병원명, 진료현황) -->
	<select id="UserreserveListCnt"  resultType="int" parameterType="HashMap">
		SELECT count(*)
		FROM
		(
		    SELECT row_number() over(order by ridx desc) as rno 
		        , ridx, userid, reportday, checkin, rcode, H.hidx as hidx
		    FROM
		    (
		        SELECT ridx, RM.userid, reportday, checkin, RM.rcode, hidx, rstatus
		        FROM
		        (
		            SELECT ridx, R.userid, reportday, checkin, rcode, hidx
		            FROM
		            (
		                select ridx, userid, reportday, checkin, rcode, hidx
		                from reserve
		            ) R
		            JOIN
		            (
		                select userid
		                from member
		                where userid = #{userid}
		            )M
		            ON R.userid = M.userid
		        )RM
		        JOIN
		        (
		            select rcode, rstatus
		            from reservecode
		            <if test ='sclist == "진료현황"'>
		                where rstatus = #{inputsc}
		            </if>
		            
		        )RC
		        ON RM.rcode = RC.rcode
		    ) RMC
		    JOIN
		    (
		        select hidx, hpname, hptel
		        from hospital
		        <if test='sclist == "병원명"' >
		            where hpname like '%' || #{inputsc} || '%'
		        </if>
		    ) H
		    ON RMC.hidx = H.hidx
		)
	</select>
	
	<!-- (일반회원- 진료예약 열람) 예약된 병원의 아이디 값을 가지고 이름과 전화번호 알아오기 -->
	<select id="GetHidxInfo" resultType="MemberDTO" parameterType="String">
		select name, mobile
		FROM
		(
		    select userid
		    from classcodemet
		    where hidx = #{hidx}
		) C
		JOIN
		(
		    select userid, name, mobile
		    from member
		) M
		ON C.userid = M.userid
	</select>
	
	<!-- (일반회원- 진료예약 열람) ridx 를 통해 진료접수 취소하기  -->
	<update id="cancleRdto" parameterType="String">
		update reserve set rcode = '0'
		where ridx = #{ridx}
	</update>
	
	<!-- (의료인- 진료 일정관리) hidx 의 예약리스트 가져오기  -->
	<select id="TotalreserveList" resultType="ReserveDTO" parameterType="String">
	    SELECT ridx, RM.userid as userid, reportday, checkin, RM.rcode as rcode, hidx
	    FROM
	    (
	        SELECT ridx, M.userid, reportday, checkin, rcode, hidx
	        FROM
	        (
	            select ridx, userid, reportday, checkin, rcode, hidx
	            from reserve
	            where hidx = #{hidx}
	            order by checkin desc
	        )R
	        JOIN
	        (
	            select userid, name
	            from member
	        )M
	        ON R.userid = M.userid
	    ) RM
	    JOIN
	    (
	        select rcode, rstatus
	        from reservecode
	    ) RC
	    ON RM.rcode = RC.rcode
	</select>
	
	<!-- (의료인- 진료 일정관리) 병원과 예약일시를 통해 환자아이디 가져오기  -->
	<select id="getPatientd" resultType="ReserveDTO" parameterType="HashMap">
		select userid
		from reserve
		where hidx = #{hidx}
			and checkin = to_char(to_date(#{checkin},'yyyy-mm-dd hh24:mi:ss'),'yyyy-mm-dd hh24:mi:ss')
	</select>
	
	<!-- (의료인- 진료 일정관리) userid 를 통해 환자 정보 가져오기  -->
	<select id="getPatientInfo" resultType="MemberDTO" parameterType="String">
		select name, mobile, email, address, birthday, gender
		from member
		where userid = #{userid}
	</select>
	
	<!-- (검색통계) T0 데이터 가져오기 -->
	<select id="getT0data" parameterType="HashMap" resultType="int">
		select count(*)
		from SEARCHLOG where substr(REGISTERDAY,0,10) = #{date}
		<if test="opu == 'u1'">
			and userid != 'Anonymous'
		</if>
	</select>
	
	<!-- (검색통계) T1 데이터 가져오기 -->
	<resultMap type="java.util.HashMap" id="t1Map">
		<result property="searchword" column="searchword" javaType="java.lang.String" />
		<result property="count" column="count" javaType="java.lang.String" />
	</resultMap>
	
	<select id="getT1data" parameterType="HashMap" resultMap="t1Map">
		select searchword, count
		from
		(
			select row_number() over (order by count(*) desc) as rno, SEARCHWORD, count(*) as count
			from
			(
				select SEARCHWORD
				from SEARCHLOG
				where substr(REGISTERDAY, 0, 10) between #{startday} and #{today}
				<if test="opu == 'u1'">
					and userid != 'Anonymous'
				</if>
			)
			group by SEARCHWORD
		)
		where rno between 1 and 7
	</select>
	
	<resultMap type="java.util.HashMap" id="slogmap">
		<result property="searchword" column="searchword" javaType="java.lang.String"/>
		<result property="registerday" column="registerday" javaType="java.lang.String"/>
	</resultMap>
	
	<select id="getmyslog" parameterType="MemberDTO" resultMap="slogmap">
		select SEARCHWORD,REGISTERDAY
		from SEARCHLOG where userid = #{userid}
		order by  REGISTERDAY desc
	</select>
	
	<!-- 마이페이지 게시글 select (커뮤 게시판 리스트 뷰잉) -->
	<select id="getmyPostList" parameterType="HashMap" resultType="CommuBoardDTO">
		select cidx, category, title, commentcount, userid, content, 
		        to_char(to_date(writeday, 'YYYY-MM-DD HH24:MI:SS'), 'yyyy/mm/dd') as writeday, 
		        viewcnt
		from (
		    select cidx, category, title, commentcount, userid, content, 
		        to_char(to_date(writeday, 'YYYY-MM-DD HH24:MI:SS'), 'yyyy/mm/dd') as writeday, 
		        viewcnt, ROW_NUMBER() OVER (ORDER BY cidx DESC) AS rno
		    from commu
		)
		WHERE rno BETWEEN #{startRno} AND #{endRno}
		<if test='userid != ""'>
			and userid = #{userid}
		</if>
		<if test='category != "0"'> 
		    and category = #{category}
		</if>
		<if test='type == "z" and category == "0"'> 
			and (lower(title) like '%'||lower(#{word})||'%' or lower(content) like '%'||lower(#{word})||'%'  or lower(userid) like '%'||lower(#{word})||'%' )
		</if> 
		<if test='type != "z"'> 
		    <if test='type == "title" and word != ""'>
		        and ( lower(title) like '%'||lower(#{word})||'%' )
		    </if>
		    <if test='type == "content" and word != ""'>
		        and ( lower(content) like '%'||lower(#{word})||'%' )
		    </if>
		    <if test='type == "userid" and word != ""'>
		        and ( lower(userid) like '%'||lower(#{word})||'%' )
		    </if>
		</if>
		order by cidx desc
	</select>
	
	
	
</mapper>