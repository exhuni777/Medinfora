<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spring.app.commu.model.CommuDAO">
	<!-- 시퀀스 채번 -->
	<select id="getSeqCommu" resultType="String">
		SELECT cidx as seq
		  FROM (
		         SELECT cidx, row_number() over(order by writeday desc) AS rno
		           FROM commu
		       )
		 WHERE rno = 1
	</select>
	
	<!-- 글 등록 -->
	<insert id="add" parameterType="CommuBoardDTO">
		insert into commu(cidx, userid, category, title, content, writeday, updateday, commentcount)
		values(seq_cidx.nextval, #{userid}, #{category}, #{title}, #{content}, default, default, default)
	</insert>
	
	<!-- 파일 등록 -->
	<insert id="add_File" parameterType="CommuFilesDTO">
		insert into commufiles(cidx, filename, orgname, filesize)
		values(#{cidx}, #{fileName}, #{orgname}, #{fileSize})
	</insert>

	<!-- 게시글 select (커뮤 게시판 리스트 뷰잉) -->
	<select id="getCommuBoardList" parameterType="HashMap" resultType="CommuBoardDTO">
		select cidx, category, title, commentcount, userid, content, 
		        to_char(to_date(writeday, 'YYYY-MM-DD HH24:MI:SS'), 'yyyy/mm/dd') as writeday, 
		        viewcnt
		from (
		    select cidx, category, title, commentcount, userid, content, 
		        to_char(to_date(writeday, 'YYYY-MM-DD HH24:MI:SS'), 'yyyy/mm/dd') as writeday, 
		        viewcnt, ROW_NUMBER() OVER (ORDER BY cidx DESC) AS rno
		    from commu
		)
		WHERE rno BETWEEN #{startRno} AND #{endRno}
		<if test='category != "0"'> 
		    and category = #{category}
		</if>
		<if test='type != "z"'> 
		    <if test='type == "title" and word != ""'>
		        and ( lower(title) like '%'||lower(#{word})||'%' )
		    </if>
		    <if test='type == "content" and word != ""'>
		        and ( lower(content) like '%'||lower(#{word})||'%' )
		    </if>
		    <if test='type == "userid" and word != ""'>
		        and ( lower(userid) like '%'||lower(#{word})||'%' )
		    </if>
		</if>
		order by cidx desc
	</select>
	
	<!-- 첨부파일 유무 시퀀스  -->
	<select id="getfileSeqList" resultType="String">
		select distinct(A.cidx) 
		from commu A JOIN commufiles B
		ON A.cidx = B.cidx
	</select>
	
	<!-- 커뮤 게시판 페이지네이션 관련 전체갯수  -->
	<select id="getCBListTotalCount" parameterType="HashMap" resultType="int">
	    SELECT count(*)
        FROM (
		select cidx
		from commu
		where 1=1
		<if test='category != "0"'> 
		    and category = #{category}
		</if>
		<if test='type != "z"'> 
		    <if test='type == "title" and word != ""'>
		        and ( lower(title) like '%'||lower(#{word})||'%' )
		    </if>
		    <if test='type == "content" and word != ""'>
		        and ( lower(content) like '%'||lower(#{word})||'%' )
		    </if>
		    <if test='type == "userid" and word != ""'>
		        and ( lower(userid) like '%'||lower(#{word})||'%' )
		    </if>
		</if>
		GROUP BY cidx)
	</select>
	
	<!-- 게시글 상세  -->
	<select id="getCommuDetail" parameterType="String" resultType="CommuBoardDTO" >
		select cidx, category, title, commentcount, userid, content, 
				to_char(to_date(writeday, 'YYYY-MM-DD HH24:MI:SS'), 'yyyy.mm.dd hh24:mi') as writeday, 
       			to_char(to_date(updateday, 'YYYY-MM-DD HH24:MI:SS'), 'yyyy.mm.dd hh24:mi') as updateday, 
       			viewcnt, suggestioncnt
		from commu
		where cidx = #{cidx}
	</select>
	
	<!-- 게시글 조회수 증가 -->
	<update id="viewCntIncrease" parameterType="String">
		update commu set viewcnt = viewcnt + 1
		where cidx = #{cidx}
	</update>
		
	<!-- 게시글 1개당 첨부파일 리스트 -->		
	<select id="getAttachfiles" parameterType="String" resultType="CommuFilesDTO">
		select filename, orgname, filesize
		from commufiles
		where cidx = #{cidx}
	</select>
	
	<!-- 글 수정하기 -->
	<update id="edit" parameterType="CommuBoardDTO" >
		update commu set category = #{category}, title = #{title}, content = #{content}, updateday = default
		where cidx = #{cidx}
	</update>
	
	<!-- 특정 첨부파일 삭제하기 -->
	<delete id="fileDel" parameterType="String">
		delete from commufiles
		 where cidx = #{cidx} and filename = #{fileName}
	</delete>
	
	<!-- 모든 첨부파일 삭제하기 -->
	<delete id="fileDelAll" parameterType="String">
		 delete from commufiles
		 where cidx = #{cidx}
	</delete>
	
	<!-- 글 삭제하기 -->
	<delete id="del" parameterType="String">
		 delete from commu
		 where cidx = #{cidx}
	</delete>

	<!-- 댓글 쓰기 -->
	<insert id="addComment" parameterType="CommuCommentDTO">
		<!-- 댓글 쓰기인 경우 -->	
		<if test='fk_cmidx.equals("")'>
			insert into commucomment(cmidx, cidx, userid, content, writeday, updateday, groupno, fk_cmidx, depthno)
			values(seq_cmidx.nextval, #{cidx}, #{userid}, #{content}, default, default, #{groupno}, default, default)
		</if>
		
		<if test='!fk_cmidx.equals("")'>
			insert into commucomment(cmidx, cidx, userid, content, writeday, updateday, groupno, fk_cmidx, depthno)
			values(seq_cmidx.nextval, #{cidx}, #{userid}, #{content}, default, default, #{groupno}, #{fk_cmidx},
            <choose>
                <when test="depthno != 1">
                    #{depthno} + 1
                </when>
                <otherwise>
                    1
                </otherwise>
            </choose>
			)
		</if>
	</insert>
	
	<!-- commentCount 컬럼 1증가(update) -->
	<update id="updateCommentCount" parameterType="String">
		update commu set commentcount = commentcount + 1
		where cidx = #{cidx}
	</update>
	
	<!-- 커뮤댓글의 그룹넘버 알아오기 -->
	<select id="getGroupnoMax" resultType="int">
		select nvl(max(groupno), 0)
		from COMMUCOMMENT
	</select>

	<!-- 댓글 조회 -->
	<select id="getCommentList" parameterType="HashMap" resultType="CommuCommentDTO">
		select CMIDX, USERID, content, WRITEDAY, updateday, GROUPNO, DEPTHNO, FK_CMIDX
		from
		(select row_number() over(order by CMIDX desc) AS rno,
		        CMIDX, USERID, content, to_char(to_date(writeday, 'YYYY-MM-DD HH24:MI:SS'), 'yyyy.mm.dd hh:dd') AS WRITEDAY,
		        to_char(to_date(updateday, 'YYYY-MM-DD HH24:MI:SS'), 'yyyy.mm.dd hh:dd') AS updateday, GROUPNO, DEPTHNO, FK_CMIDX
		from COMMUCOMMENT
		where CIDX = #{cidx}
		order by CMIDX desc
		) V
		WHERE rno Between #{startRno} AND #{endRno}
	</select>
	
	<!-- 댓글 전체갯수 조회(페이징처리용) -->
	<select id="getCommentTotalCount" parameterType="String" resultType="int">
		select count(*)
		from COMMUCOMMENT
		where cidx = #{cidx}
	</select>
	
	
</mapper>